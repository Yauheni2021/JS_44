// console.log([1, 2, 3] === [1, 2, 3]);

// 1) –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –∞–¥—Ä–µ—Å—Å –∫ –ø–µ—Ä–≤–æ–º—É –º–∞—Å–∏–≤—É - link1
// 2) –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –∞–¥—Ä–µ—Å—Å –≤—Ç–æ—Ä–æ–≥–æ –º–∞—Å–∏–≤–∞ - link2
// 3) –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –∞–¥—Ä–µ—Å–∞ –∫–æ—Ç–æ—Ä–∏–µ –≤–µ–¥—É—Ç –∫ –º–∞—Å–∏–≤—É - —Ä–∞–∑–Ω—ã–µ - –ø–æ—ç—Ç–æ–º—É false

// const names = [];

// names.push("Bob", "John");

// console.log("names", names);

// console.log([7, 3, 8, 9, 2].slice(3));
// console.log([7, 3, 4, 5].slice());
//1) —Å–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ - []
//2) –¥–æ–±–∞–≤–ª—è–µ–º –µ–ª–µ–º–µ–Ω—Ç –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 3 - 9
//3) –¥–æ–±–∞–≤–ª—è–µ–º –µ–ª–µ–º–µ–Ω—Ç –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 4 - 2

// –û—á–µ—Ä–µ–¥—å –∏ —Å—Ç–µ–∫

// const que = [1, 2, 3, 4];
// que.push(12);
// const stack = [5, 6, 7, 8, 9];

// const numbers = [1, 2, 3]; // —á–∏—Å–ª–æ 1 - –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —É –Ω–µ–≥–æ = 0
// —á–∏—Å–ª–æ 2 - –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —É –Ω–µ–≥–æ = 1
// —á–∏—Å–ª–æ 3 - –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —É –Ω–µ–≥–æ = 2
// —á–∏—Å–ª–æ 6 - –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —É –Ω–µ–≥–æ = 3

// numbers.push(6);
// 1) –¥–æ–±–∞–≤–ª—è–µ–º –µ–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü –º–∞—Å–∏–≤–∞ –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å = 3

// 1) –¥–æ–±–∞–≤–ª—è–µ–º –µ–ª–µ–º–µ–Ω—Ç –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å–∏–≤–∞
// 2) –ü–æ–º–µ–Ω—è—Ç—å –∏–Ω–¥–µ–∫—Å —Ü—ã—Ñ—Ä—ã 1 —Å 0 –Ω–∞ 1
// 2) –ü–æ–º–µ–Ω—è—Ç—å –∏–Ω–¥–µ–∫—Å —Ü—ã—Ñ—Ä—ã 2 —Å 0 –Ω–∞ 2
// 2) –ü–æ–º–µ–Ω—è—Ç—å –∏–Ω–¥–µ–∫—Å —Ü—ã—Ñ—Ä—ã 3 —Å 0 –Ω–∞ 3
// [6, 1, 2, 3];

// const numbers = [1, 4, 5, 7];
// numbers.pop()

// const user = {
//   name: "Bob",
//   age: 14,
// };

// console.log(numbers);
// console.log(user);

// [] - –º–∞—Å–∏–≤—ã
// () - —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞
// {} - –æ–±–µ–∫—Ç—ã, —Ü—ã–∫–ª—ã, —Ñ—É–Ω–∫—Ü–∏–∏, if else, switch

// function add() {
//   console.log(arguments);
// }

// add(1, 2, 4, 5, 7);

// let counter = 1;
// let total1 = 0;

// while (counter <= 100) {
//   //   console.log(counter);
//   total1 = total1 + counter;
//   counter += 1; //// error here
// }
// console.log("total1", total1);

// let total = 0;
// for (let i = 1; i <= 100; i += 1) {
//   //   console.log(i);
//   total = total + i;
// }
// console.log("total", total);

// let num = 0;
// for (let n = 1000; n / 2 >= 50; n /= 2) {
//   num += 1;
// }

// console.log("num:", num);
// console.log("n", n); /// scope

// # –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç–∏–µ 3. –ú–∞—Å—Å–∏–≤—ã

// ## Example 1 - –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º

// 1. –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ `genres` —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
// 2. –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
// 3. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// 4. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞
//    –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
// 5. –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// 6. –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggy¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.

// ```js
// const genres = ;
// ```

// const genres = ["Jazz", "Blues"];
// genres.push("–†–æ–∫-–Ω-—Ä–æ–ª–ª");
// console.log(genres[0]);
// console.log(genres[genres.length - 1]);
// console.log(genres.shift());
// genres.unshift("Country", "Reggy");
// genres.splice(0, 0, "Country", "Reggy");
// console.log(genres);

// ## Example 2 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è
// –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π `values` –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ
// —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// ```js
// const values = '8 11';
// ```

// const values = "8 11";
// const valuesArray = values.split(" ");
// console.log("valuesArray", valuesArray);
// const result = valuesArray[0] * valuesArray[1]; // '8' * '11' => 8 * 11 => 88
// console.log(result);

// ## Example 3 - –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ `fruits` —Ü–∏–∫–ª–æ–º `for`. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ `–Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞`.
// –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `1`.

// ```js
// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
// ```

// const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];

// for (let i = 0; i < fruits.length; i++) {
//   console.log(`${i + 1} - ${fruits[i]}`);
//   //   console.log("index", i);
// }

// for (let fruit of fruits) {
//   const index = fruits.indexOf(fruit);
//   const indexForUser = index + 1;
//   console.log(`${indexForUser} - ${fruit}`);
// }

// ## Example 4 - –ú–∞—Å—Å–∏–≤—ã –∏ —Ü–∏–∫–ª—ã

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í
// –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö `names` –∏ `phones` —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤,
// —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞
// —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.
// csv
// ```js
// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';
// ```

// const names = "Jacob,William,Solomon,Artemis";
// const phones = "89001234567,89001112233,890055566377,890055566300";

// const namesArray = names.split(",");
// const phonesArray = phones.split(",");

// console.log(namesArray);
// console.log(phonesArray);

// for (let i = 0; i < namesArray.length; i += 1) {
//   console.log(`${namesArray[i]} - ${phonesArray[i]}`);
// }

// ## Example 5 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏
// –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ. –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è
// –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º. –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏.

// ```js
// const string = 'Welcome to the future';
// ```

// ## Example 6 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) –∏ –≤—ã–≤–æ–¥–∏—Ç
// –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.

// ```js
// const string = 'Welcome to the future';
// ```

// const string = "Welcome to the future";

// const array = string.split(" ");
// const reversedArray = array.reverse();
// const result = reversedArray.join(" ");
// console.log(result);

// const result = string.split(" ").reverse().join(" ");

// ## Example 7 - –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è
// –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª. –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

// ```js
// const numbers = [2, 17, 94, 1, 23, 37];
// let min;
// console.log(min); // 1
// ```

// const numbers = [2, 17, 94, 1, 23, 37];

// let min = numbers[0];

// for (const number of numbers) {
//   if (number < min) {
//     min = number;
//   }
// }

// console.log("min", min);

// 1) –ö—Ç–æ –∏–≥—Ä–∞–µ—Ç
// 2) –°–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∫–æ–º–ø—é–µ—Ä–∞
// 3 ) –í—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// 4) –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤—ã–∏–≥—Ä–∞—à
// const variants = ["–ö–∞–º–µ–Ω—å", "–ù–æ–∂–Ω–∏—Ü—ã", "–ë—É–º–∞–≥–∞"];
// const randomIndex = Math.floor(Math.random() * variants.length);
// const humanChoice = prompt("Enter your variant");
// const computerChoice = variants[randomIndex];

// if (
//   (computerChoice === "–ö–∞–º–µ–Ω—å" && humanChoice === "–ë—É–º–∞–≥–∞") ||
//   (computerChoice === "–ù–æ–∂–Ω–∏—Ü—ã" && humanChoice === "–ö–∞–º–µ–Ω—å") ||
//   (computerChoice === "–ë—É–º–∞–≥–∞" && humanChoice === "–ù–æ–∂–Ω–∏—Ü—ã")
// ) {
//   alert("–í—ã –ø–æ–±–µ–¥–∏–ª–∏");
// } else if () {
// alert("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏");
// } else {
// alert("–Ω–∏—á—å—è");
// }

// const fruits = ["apple", "peach", "pear", "banana"];
// const lastElementIndex = fruits.length - 1;
// const lastElement = fruits[3];

// console.log(lastElement);
// Change code below this line

/////////////////////////////////////////////// End lesson # 3

// function add() {
//   const argumentsArray = Array.from(arguments);
//   let total = 0;
//   for (const number of argumentsArray) {
//     total += number;
//   }
//   return total;
// }

// console.log(add(1, 2));
// console.log(add(4, 5, 7, 3, 2));

// function moduleNameToUppercase(moduleName) {
//   return moduleName.toUpperCase();
// }

// moduleNameToUppercase("Module 1"); // moduleName = "Module 1"
// moduleNameToUppercase("Module 15"); // moduleName = "Module 15"
// moduleNameToUppercase("Module 22"); // moduleName = "Module 22"

// # –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç–∏–µ 4. –§—É–Ω–∫—Ü–∏–∏

// ## Example 1 - –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `calcBMI(weight, height)` –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
// –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ —á–µ–ª–æ–≤–µ–∫–∞. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≤–µ—Å –≤ –∫–∏–ª–ª–æ–≥—Ä–∞–º–º–∞—Ö –Ω–∞
// –∫–≤–∞–¥—Ä–∞—Ç –≤—ã—Å–æ—Ç—ã —á–µ–ª–æ–≤–µ–∫–∞ –≤ –º–µ—Ç—Ä–∞—Ö.

// –í–µ—Å –∏ –≤—ã—Å–æ—Ç–∞ –±—É–¥—É—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏. –ù–µ—Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å
// –∑–∞–¥–∞–Ω—ã –≤ –≤–∏–¥–µ `24.7` –∏–ª–∏ `24,7`, —Ç–æ –µ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏
// –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—è—Ç–∞—è.

// –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–æ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π;

// ```js

// function calcBMI(weight, height) {
//   return (
//     Number.parseFloat(weight) / Math.pow(Number.parseFloat(height), 2)
//   ).toFixed(1);
// }

// function calcBMI(weight, height) {
//   const result = weight / Math.pow(height, 2);
//   return result.toFixed(1);
// }

// function calcBMI(weight, height) {
//   return (weight / (height * height)).toFixed(1);
// }

// const calcBMI = (weight, height) => (weight / (height * height)).toFixed(1);

// const bmi = calcBMI("88,3", "1.75");
// console.log(bmi); // 28.8
// ```

// ## Example 2 - –ú–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `min(a,b)`, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª `a` –∏ `b`.

// const min = function (a = 0, b = 0) {
//   if (a > b) {
//     return b;
//   }
//   return a;
// };

// // ```js

// const variantA = Number(prompt("Enter number a"));
// const variantB = Number(prompt("Enter number b"));

// console.log(min(2, 5)); // 2
// console.log(min(3, -1)); // -1
// console.log(min(1, 1)); // 1
// console.log(min(variantA, variantB));
// ```

// ## Example 3 - –ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `getRectArea(dimensions)` –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
// —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä `dimensions` –≤ –≤–∏–¥–µ
// —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// ```js
// function getRectArea(dimensions) {
//   const numbers = dimensions.split(" ");

//   if (
//     Number.isInteger(Number(numbers[0])) &&
//     Number.isInteger(Number(numbers[1]))
//   ) {
//     return numbers[0] * numbers[1];
//   }

//   return "–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –¥—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞";
// }

// function getRectArea(dimensions) {
//   const numbers = dimensions.split(" ");

//   if (
//     !Number.isInteger(Number(numbers[0])) ||
//     !Number.isInteger(Number(numbers[1]))
//   ) {
//     return "–í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –¥—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞";
//   }
//   return numbers[0] * numbers[1];
// }

// console.log(getRectArea("8 11"));
// console.log(getRectArea("120 23"));

// ```

// ## Example 4 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `logItems(items)`, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–∏–∫–ª
// `for`, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤
// —Ñ–æ—Ä–º–∞—Ç–µ `<–Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞>`. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞
// –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `1`.

// –ù–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ `['Mango', 'Poly', 'Ajax']` —Å –∏–Ω–¥–µ–∫—Å–æ–º `0`
// –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ `1 - Mango`, –∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 2 –≤—ã–≤–µ–¥–µ—Ç `3 - Ajax`.

// ```js
// function logItems(items) {
//   for (let item of items) {
//     const index = items.indexOf(item) + 1;
//     console.log(index, item);
//   }
// }

// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);
// ```

// ## Example 5 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `printContactsInfo(names, phones)` –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è
// –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–∞—Ä–∞–º–µ—Ç—Ä—ã `names` –∏ `phones` –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã
// —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏
// —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
// –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// ```js
// function printContactsInfo(names, phones) {}

// printContactsInfo(
//   'Jacob,William,Solomon,Artemis',
//   '89001234567,89001112233,890055566377,890055566300',
// );
// ```

// ## Example 6 - –ü–æ–∏—Å–∫ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `findLargestNumber(numbers)`–∫–æ—Ç–æ—Ä–∞—è –∏—â–µ—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –≤
// –º–∞—Å—Å–∏–≤–µ.

// ```js
// function findLargestNumber(numbers) {
//   let max = numbers[0];
//   for (let number of numbers) {
//     if (max < number) {
//       max = number;
//     }
//   }
//   return max;
// }

// console.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94
// console.log(findLargestNumber([49, 4, 7, 83, 12])); // 83
// ```

// ## Example 7 - –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `calAverage()` –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í—Å–µ –∞—Ä—É–≥–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞–º–∏.

// ```js
// function calAverage() {}

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2
// ```

// ## Example 8 - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é `formatTime(minutes)` –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –∑–Ω–∞—á–µ–Ω–∏–µ `minutes`
// (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç) –≤ —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç `HH:MM`.

// ```js
// const hours = Math.floor(totalMinutes / 60);
// const minutes = totalMinutes % 60;
// console.log(hours);
// console.log(minutes);

// const doubleDigitHours = String(hours).padStart(2, 0);
// const doubleDigitMinutes = String(minutes).padStart(2, 0);
// console.log(`${doubleDigitHours}:${doubleDigitMinutes}`);

// function formatTime(minutes) {}

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"
// ```

// ## Example 9 - –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫—É—Ä—Å–æ–≤ (includes, indexOf, push –∏ —Ç. –¥.)

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—É—á–∞—é—â–∏—Ö –∫—É—Ä—Å–æ–≤ `courses`:

// - `addCourse(name)` - –¥–æ–±–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å –≤ –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// - `removeCourse(name)` - —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—Å –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
// - `updateCourse(oldName, newName)` - –∏–∑–º–µ–Ω—è–µ—Ç –∏–º—è –Ω–∞ –Ω–æ–≤–æ–µ

// ```js
// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

// addCourse('Express');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse('CSS'); // '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫—É—Ä—Å'

// removeCourse('React');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse('Vue'); // '–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω'

// updateCourse('Express', 'NestJS');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']
// ```

// function localize(lang = "en") {
//   if (lang === "ru") {
//     return "–ü—Ä–∏–≤–µ—Ç";
//   }
//   if (lang === "uk") {
//     return "–ü—Ä–∏–≤i—Ç";
//   }
//   if (lang === "en") {
//     return "Hello";
//   }
// }

// function localize(lang = "en") {
//   if (lang === "ru") {
//     return "–ü—Ä–∏–≤–µ—Ç";
//   }
//   if (lang === "uk") {
//     return "–ü—Ä–∏–≤i—Ç";
//   }
//   return "Hello";
// }

// console.log(localize("ru").toUpperCase());
// console.log(localize("uk").toUpperCase());
// console.log(localize().toUpperCase());

// const add = function () { }; // 1

// function add() {} // 2

// const localize = (lang = "en") => {
//   if (lang === "ru") {
//     return "–ü—Ä–∏–≤–µ—Ç";
//   }
//   if (lang === "uk") {
//     return "–ü—Ä–∏–≤i—Ç";
//   }
//   if (lang === "en") {
//     return "Hello";
//   }
// };

// const add = (a, b) => a + b;
// const add = (a, b) => {
//   return a + b;
// };

// const numbers = [1, 3, 4, 6, 7];

// const result = numbers.slice().pop().toFixed().toUpperCase();
// console.log(result);

// const result = numbers.concat([23, 45]).splice(0,1).length;
